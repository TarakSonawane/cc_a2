{"ast":null,"code":"// src/api.js\nconst API_URL = \"http://127.0.0.1:5000\"; // Change this if your backend URL is different\n\n// Fetch all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(`${API_URL}/products`);\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    return [];\n  }\n};\n\n// Add a new product (ðŸ’¡ This function was missing)\nexport const addProduct = async product => {\n  const formData = new FormData();\n  formData.append(\"name\", product.name);\n  formData.append(\"price\", product.price);\n  formData.append(\"description\", product.description);\n  if (product.image) {\n    formData.append(\"image\", product.image);\n  }\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/products\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json(); // Ensure response is processed\n    return {\n      success: response.ok,\n      data\n    };\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n    return {\n      success: false\n    };\n  }\n};\n\n// Delete a product\nexport const deleteProduct = async id => {\n  try {\n    const response = await fetch(`${API_URL}/products/${id}`, {\n      method: \"DELETE\"\n    });\n    if (!response.ok) {\n      console.error(\"Error deleting product:\", await response.text());\n      return {\n        success: false\n      };\n    }\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error(\"Error deleting product:\", error);\n    return {\n      success: false\n    };\n  }\n};","map":{"version":3,"names":["API_URL","fetchProducts","response","fetch","json","error","console","addProduct","product","formData","FormData","append","name","price","description","image","method","body","data","success","ok","deleteProduct","id","text"],"sources":["C:/Users/TARAK/Desktop/Azure-Test/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nconst API_URL = \"http://127.0.0.1:5000\"; // Change this if your backend URL is different\r\n\r\n// Fetch all products\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/products`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Add a new product (ðŸ’¡ This function was missing)\r\nexport const addProduct = async (product) => {\r\n  const formData = new FormData();\r\n  formData.append(\"name\", product.name);\r\n  formData.append(\"price\", product.price);\r\n  formData.append(\"description\", product.description);\r\n  if (product.image) {\r\n    formData.append(\"image\", product.image);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\"http://127.0.0.1:5000/products\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json(); // Ensure response is processed\r\n    return { success: response.ok, data };\r\n  } catch (error) {\r\n    console.error(\"Error adding product:\", error);\r\n    return { success: false };\r\n  }\r\n};\r\n\r\n\r\n\r\n// Delete a product\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(\"Error deleting product:\", await response.text());\r\n      return { success: false };\r\n    }\r\n\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Error deleting product:\", error);\r\n    return { success: false };\r\n  }\r\n};\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC;IACnD,OAAO,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,OAAO,CAACI,IAAI,CAAC;EACrCH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,OAAO,CAACK,KAAK,CAAC;EACvCJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,OAAO,CAACM,WAAW,CAAC;EACnD,IAAIN,OAAO,CAACO,KAAK,EAAE;IACjBN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,OAAO,CAACO,KAAK,CAAC;EACzC;EAEA,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7Da,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMhB,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAO;MAAEe,OAAO,EAAEjB,QAAQ,CAACkB,EAAE;MAAEF;IAAK,CAAC;EACvC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO;MAAEc,OAAO,EAAE;IAAM,CAAC;EAC3B;AACF,CAAC;;AAID;AACA,OAAO,MAAME,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,aAAasB,EAAE,EAAE,EAAE;MACxDN,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACkB,EAAE,EAAE;MAChBd,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAE,MAAMH,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAAC;MAC/D,OAAO;QAAEJ,OAAO,EAAE;MAAM,CAAC;IAC3B;IAEA,OAAO;MAAEA,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO;MAAEc,OAAO,EAAE;IAAM,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}