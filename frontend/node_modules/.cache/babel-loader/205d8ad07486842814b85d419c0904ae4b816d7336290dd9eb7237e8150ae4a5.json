{"ast":null,"code":"// src/api.js\nconst API_URL = \"http://127.0.0.1:5000\"; // Change this if your backend URL is different\n\n// Fetch all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(`${API_URL}/products`);\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    return [];\n  }\n};\n\n// Add a new product (ðŸ’¡ This function was missing)\nexport const addProduct = async productData => {\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", productData.name);\n    formData.append(\"price\", productData.price);\n    formData.append(\"description\", productData.description);\n    if (productData.image) {\n      formData.append(\"image\", productData.image);\n    }\n    const response = await fetch(`${API_URL}/products`, {\n      method: \"POST\",\n      body: formData\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n    return {\n      success: false\n    };\n  }\n};\n\n// Delete a product\nexport const deleteProduct = async id => {\n  try {\n    const response = await fetch(`${API_URL}/products/${id}`, {\n      method: \"DELETE\"\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error deleting product:\", error);\n    return {\n      success: false\n    };\n  }\n};\n\n// Search for products (if implemented)\nexport const searchProducts = async query => {\n  try {\n    const response = await fetch(`${API_URL}/products/search?query=${query}`);\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error searching products:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["API_URL","fetchProducts","response","fetch","json","error","console","addProduct","productData","formData","FormData","append","name","price","description","image","method","body","success","deleteProduct","id","searchProducts","query"],"sources":["C:/Users/TARAK/Desktop/Azure-Test/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nconst API_URL = \"http://127.0.0.1:5000\"; // Change this if your backend URL is different\r\n\r\n// Fetch all products\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/products`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Add a new product (ðŸ’¡ This function was missing)\r\nexport const addProduct = async (productData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productData.name);\r\n    formData.append(\"price\", productData.price);\r\n    formData.append(\"description\", productData.description);\r\n    if (productData.image) {\r\n      formData.append(\"image\", productData.image);\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}/products`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error adding product:\", error);\r\n    return { success: false };\r\n  }\r\n};\r\n\r\n// Delete a product\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error deleting product:\", error);\r\n    return { success: false };\r\n  }\r\n};\r\n\r\n// Search for products (if implemented)\r\nexport const searchProducts = async (query) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/products/search?query=${query}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error searching products:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC;IACnD,OAAO,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,WAAW,CAACI,IAAI,CAAC;IACzCH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,WAAW,CAACK,KAAK,CAAC;IAC3CJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,WAAW,CAACM,WAAW,CAAC;IACvD,IAAIN,WAAW,CAACO,KAAK,EAAE;MACrBN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,WAAW,CAACO,KAAK,CAAC;IAC7C;IAEA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,EAAE;MAClDgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC;IAEF,OAAO,MAAMP,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO;MAAEa,OAAO,EAAE;IAAM,CAAC;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,aAAaoB,EAAE,EAAE,EAAE;MACxDJ,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAO,MAAMd,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO;MAAEa,OAAO,EAAE;IAAM,CAAC;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,0BAA0BsB,KAAK,EAAE,CAAC;IACzE,OAAO,MAAMpB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}